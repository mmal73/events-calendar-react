{"version":3,"sources":["hooks/useForm.js","helpers/myFetch.js","types/types.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","components/auth/LoginScreen.js","helpers/calendarMessages.js","components/calendar/CalendarEvent.js","components/calendar/CalendarModal.js","actions/ui.js","components/ui/FabAddNew.js","components/ui/Navbar.js","components/calendar/CalendarScreen.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/uiReducer.js","reducers/calendarReducer.js","reducers/authReducer.js","reducers/rootReducer.js","store/index.js","App.js","index.js"],"names":["useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","base_url","process","REACT_APP_API_URL","fetchWithoutToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","types","prepareEvents","events","map","event","start","moment","toDate","end","eventClearActive","type","eventAddNew","payload","eventUpdated","saveToken","setItem","Date","getTime","showErrors","message","errors","field","hasOwnProperty","msg","Swal","fire","icon","title","html","login","user","startLogout","dispatch","removeItem","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","e","email","password","preventDefault","a","resp","json","status","_id","placeholder","onChange","autoComplete","text","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowSum1","clone","initialForm","notes","CalendarModal","modalOpen","useSelector","state","ui","calendar","eventActive","calendarDateSelected","formValues","setFormValues","titleInvalid","trim","length","titleValid","setTitleValid","useEffect","closeModal","errorSwal","error","isOpen","onRequestClose","style","contentLabel","overlayClassName","closeTimeoutMS","ariaHideApp","momentStartDate","momentEndDate","isSameOrAfter","id","console","log","getState","auth","eventStartAddNew","format","minDate","rows","FabAddNew","handleClick","onClick","Navbar","locale","localizer","momentLocalizer","CalendarScreen","currentView","setCurrentView","preparedEvents","handleOpenModal","components","startAccessor","endAccessor","eventPropGetter","isSelected","onDoubleClickEvent","onSelectEvent","onView","view","onSelectSlot","selectable","PrivateRoute","isAuthenticated","Component","component","rest","render","routeProps","to","pathname","from","location","PublicRoute","AppRouter","checking","authenticated","exact","path","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.111b67a5.chunk.js","sourcesContent":["import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","const base_url = `${process.env.REACT_APP_API_URL}`;\r\n\r\nexport const fetchWithoutToken = ( endpoint, data, method='GET' ) => {\r\n    const url = `${base_url}/${endpoint}`;\r\n\r\n    if( method !== 'GET' ){\r\n\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n\r\n    }\r\n    return fetch( url );\r\n}\r\n\r\nexport const fetchWithToken = ( endpoint, data, method='GET' ) => {\r\n    const url = `${base_url}/${endpoint}`;\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if( method !== 'GET' ){\r\n\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n\r\n    }\r\n    return fetch( url, {\r\n        method,\r\n        headers: {\r\n            'Content-type': 'application/json',\r\n            'x-token': token\r\n        }\r\n    });\r\n}","export const types = {\r\n    authLogin: '[auth]: Login',\r\n    authFinishCheking: '[auth]: Finish checking',\r\n    authLogout: '[auth]: Logout',\r\n    uiOpenModal: '[ui] Open modal',\r\n    uiCloseModal: '[ui] Close modal',\r\n    eventStartAddNew: '[event] Start Add new',\r\n    eventAddNew: '[event] Add new',\r\n    eventSetActive: '[event] Set active',\r\n    eventClearActive: '[event] Clear active',\r\n    eventUpdated: '[event] Updated',\r\n    eventStartDelete: '[event] Start Deleted',\r\n    eventDeleted: '[event] Deleted',\r\n    eventLoaded: '[events] Loaded',\r\n    eventClear: '[events] Clear',\r\n    calendarDateSelected: '[calendar] Date selected',\r\n}","import moment from 'moment';\r\n\r\nexport const prepareEvents = ( events = [] ) => {\r\n    return events.map( event => ({\r\n        ...event,\r\n        start: moment( event.start ).toDate(),\r\n        end: moment( event.end ).toDate(),\r\n    }));\r\n}","import { types } from \"../types/types\"\r\nimport {showErrors} from './auth';\r\nimport { fetchWithToken } from \"../helpers/myFetch\";\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n})\r\nexport const eventClearActive = (event) => ({\r\n    type: types.eventSetActive\r\n})\r\nconst eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n})\r\nexport const eventStartAddNew = ( event ) => {\r\n    return async( dispatch, getState ) => {\r\n        const resp = await fetchWithToken('events', event, 'POST');\r\n        const data = await resp.json();\r\n        const { _id, name } = getState().auth;\r\n        if( data.status ){\r\n            event.id = data.event.id;\r\n            event.user = {\r\n                _id,\r\n                name\r\n            }\r\n            dispatch( eventAddNew( event ) );\r\n        }else{\r\n            showErrors( data.message, data.errors );\r\n        }\r\n    }\r\n}\r\nconst eventUpdated = (event) => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n});\r\nexport const startEventUpdated = ( event ) => {\r\n    return async( dispatch ) => {\r\n        try {\r\n            const resp = await fetchWithToken(`events/${event.id}`, event, 'PUT');\r\n            const data = await resp.json();\r\n            if( data.status ){\r\n                dispatch( eventUpdated( event ) );\r\n            }else{\r\n                showErrors( data.message, data.errors );\r\n            }\r\n        } catch ( error ) {\r\n            console.log(error)\r\n        }\r\n    }\r\n};\r\nexport const eventDeleted = () => ({\r\n    type: types.eventDeleted\r\n});\r\nexport const eventStartDelete = () => {\r\n    return async( dispatch, getState ) => {\r\n        const { id } = getState().calendar.eventActive;\r\n        try {\r\n            const resp = await fetchWithToken(`events/${id}`, {}, 'DELETE');\r\n            const data = await resp.json();\r\n            if( data.status ){\r\n                dispatch( eventDeleted() );\r\n            }else{\r\n                showErrors( data.message, data.errors );\r\n            }\r\n        } catch ( error ) {\r\n            console.log(error)\r\n        }\r\n    }\r\n};\r\nexport const calendarDateSelected = (event) => ({\r\n    type: types.calendarDateSelected,\r\n    payload: event\r\n});\r\nconst eventLoaded = ( events ) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n})\r\nexport const eventStartLoaded = () => {\r\n    return async( dispatch ) => {\r\n        try {\r\n            const resp = await fetchWithToken('events');\r\n            const data = await resp.json();\r\n            if( data.status ){\r\n                const preparedEvents = prepareEvents( data.events );\r\n                dispatch( eventLoaded( preparedEvents ) );\r\n            }else{\r\n                showErrors( data.message, data.errors );\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\nexport const eventClear = () => ({\r\n    type: types.eventClear\r\n})","import { fetchWithoutToken, fetchWithToken } from \"../helpers/myFetch\";\r\nimport { types } from \"../types/types\";\r\nimport Swal from \"sweetalert2\";\r\nimport { eventClear } from \"./events\";\r\n\r\nconst saveToken = ( token ) => {\r\n    localStorage.setItem( 'token', token );\r\n    localStorage.setItem( 'token-init-date', new Date().getTime() );\r\n}\r\n\r\nconst showErrors = (message, errors) => {\r\n    if( !message ){\r\n        message = '';\r\n        for (const field in errors) {\r\n            if (errors.hasOwnProperty(field)) {\r\n                const _error = errors[field].msg;\r\n                message += _error;\r\n                message += `<br>`;\r\n            }\r\n        }\r\n    }\r\n    return Swal.fire({\r\n        icon: 'error',\r\n        title: 'Oops...',\r\n        html: message\r\n    });\r\n}\r\n\r\nconst login = ( user ) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n});\r\n\r\nconst checkingFinish = () => ({\r\n    type: types.authFinishCheking\r\n});\r\n\r\nconst authLoginStart = ( email, password ) => {\r\n    return async( dispatch ) => {\r\n        const resp = await fetchWithoutToken('auth/login', { email, password }, 'POST');\r\n        const data = await resp.json();\r\n        if( data.status ){\r\n            const { token, _id, name } = data;\r\n            saveToken(token);\r\n            dispatch( login({ _id, name }) )\r\n        }else{\r\n            showErrors( data.message, data.errors );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst startRegister = ( name, email, password ) => {\r\n    return async( dispatch ) => {\r\n        const resp = await fetchWithoutToken('auth/register', { name, email, password }, 'POST');\r\n        const data = await resp.json();\r\n        if( data.status ){\r\n            const { token, _id } = data;\r\n            saveToken(token);\r\n            dispatch( login({ _id, name }) )\r\n        }else{\r\n            showErrors( data.message, data.errors );\r\n        }\r\n    };\r\n}\r\n\r\nconst startChecking = () => {\r\n    return async( dispatch ) => {\r\n        const resp = await fetchWithToken('auth/renew-token');\r\n        const data = await resp.json();\r\n        if( data.status ){\r\n            const { token, _id, name } = data;\r\n            saveToken(token);\r\n            dispatch( login({ _id, name }) )\r\n        }else{\r\n            dispatch( checkingFinish() );\r\n        }\r\n    }\r\n}\r\n\r\nconst logout = () => ({\r\n    type: types.authLogout\r\n})\r\nconst startLogout = () => {\r\n    return ( dispatch ) => {\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('token-init-date');\r\n        dispatch( eventClear() );\r\n        dispatch( logout() );\r\n    }\r\n}\r\n\r\nexport{\r\n    authLoginStart,\r\n    startRegister,\r\n    startChecking,\r\n    startLogout,\r\n    showErrors\r\n}\r\n","import React from \"react\";\r\nimport \"./login.css\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\nimport { authLoginStart } from \"../../actions/auth\";\r\nimport { startRegister } from \"../../actions/auth\";\r\n\r\nexport default function LoginScreen() {\r\n  const dispatch = useDispatch();\r\n\r\n  const [formLoginValues, handleLoginInputChange] = useForm({\r\n    lEmail: \"admin@calendarapp.com\",\r\n    lPassword: \"password123\",\r\n  });\r\n  const { lEmail, lPassword } = formLoginValues;\r\n\r\n  const [formRegisterValues, handleRegisterInputChange] = useForm({\r\n    rName: \"\",\r\n    rEmail: \"\",\r\n    rPassword1: \"\",\r\n    rPassword2: \"\",\r\n  });\r\n  const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\r\n\r\n  const handleLoginSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(authLoginStart(lEmail, lPassword));\r\n  };\r\n\r\n  const handleRegisterSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (rPassword1 !== rPassword2) {\r\n      return Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Error\",\r\n        text: \"Las contranseñas no son iguales\",\r\n      });\r\n    }\r\n    dispatch(startRegister(rName, rEmail, rPassword1));\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div className=\"container\">\r\n        <div className=\"row forms-container\">\r\n          <div className=\"col-md-6 login-form-1 mt-2 p-4\">\r\n            <h3 className=\"text-white text-center\">Ingreso</h3>\r\n            <form className=\"form-container\" onSubmit={handleLoginSubmit}>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control input-form\"\r\n                  placeholder=\"Correo\"\r\n                  name=\"lEmail\"\r\n                  value={lEmail}\r\n                  onChange={handleLoginInputChange}\r\n                  autoComplete=\"off\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-control input-form\"\r\n                  placeholder=\"Contraseña\"\r\n                  name=\"lPassword\"\r\n                  value={lPassword}\r\n                  onChange={handleLoginInputChange}\r\n                  autoComplete=\"off\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group d-flex justify-content-center\">\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn-submit\"\r\n                  value=\"Login\"\r\n                  autoComplete=\"off\"\r\n                />\r\n              </div>\r\n            </form>\r\n          </div>\r\n          <div className=\"col-md-6 login-form-2 mt-2 p-4\">\r\n            <h3 className=\"text-white text-center\">Registro</h3>\r\n            <form onSubmit={handleRegisterSubmit}>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control input-form\"\r\n                  placeholder=\"Nombre\"\r\n                  name=\"rName\"\r\n                  value={rName}\r\n                  onChange={handleRegisterInputChange}\r\n                  autoComplete=\"off\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"form-control input-form\"\r\n                  placeholder=\"Correo\"\r\n                  name=\"rEmail\"\r\n                  value={rEmail}\r\n                  onChange={handleRegisterInputChange}\r\n                  autoComplete=\"off\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-control input-form\"\r\n                  placeholder=\"Contraseña\"\r\n                  name=\"rPassword1\"\r\n                  value={rPassword1}\r\n                  onChange={handleRegisterInputChange}\r\n                  autoComplete=\"off\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-control input-form\"\r\n                  placeholder=\"Repita la contraseña\"\r\n                  name=\"rPassword2\"\r\n                  value={rPassword2}\r\n                  onChange={handleRegisterInputChange}\r\n                  autoComplete=\"off\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group d-flex justify-content-center\">\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn-submit\"\r\n                  value=\"Crear cuenta\"\r\n                  autoComplete=\"off\"\r\n                />\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react';\r\n\r\nexport default function CalendarEvent({event}) {\r\n    const {title, user} = event;\r\n    return (\r\n        <div>\r\n            <strong>{title}</strong>\r\n            <span>-{user.name}</span>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport './CalendarModal.css';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventStartAddNew, eventClearActive, startEventUpdated } from '../../actions/events';\r\n\r\n// Modal\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)'\r\n    }\r\n};\r\n\r\nif  ( process.env.NODE_ENV  !==  'test' ) Modal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\r\nconst nowSum1 =  now.clone().add(1, 'hours');\r\n\r\nconst initialForm = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: nowSum1.toDate(),\r\n};\r\n\r\nexport default function CalendarModal() {\r\n    const { modalOpen } = useSelector(state => state.ui);\r\n    const { eventActive, calendarDateSelected } = useSelector(state => state.calendar);\r\n    const dispatch = useDispatch();\r\n\r\n    // Form \r\n    const [formValues, setFormValues] = useState(initialForm);\r\n    const { title, notes, start, end } = formValues;\r\n\r\n    // title form \r\n    const titleInvalid = (title.trim().length < 2);\r\n    const [titleValid, setTitleValid] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if(calendarDateSelected){\r\n            setFormValues({\r\n                ...initialForm,\r\n                start: calendarDateSelected\r\n            });\r\n        }\r\n    }, [calendarDateSelected]);\r\n    useEffect(() => {\r\n        eventActive ? setFormValues(eventActive) : setFormValues(initialForm);\r\n    }, [eventActive]);\r\n    const handleInputChange = ({target}) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        });\r\n        titleInvalid ? setTitleValid(false) : setTitleValid(true);\r\n    }\r\n    // Datepicker\r\n    const handleStartDate = (e) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        });\r\n    }\r\n    const handleEndDate = (e) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        });\r\n    }\r\n    const closeModal = (e) => {\r\n        dispatch( uiCloseModal() );\r\n        dispatch( eventClearActive() );\r\n        setFormValues(initialForm);\r\n    }\r\n    const errorSwal = (error) => {\r\n        return Swal.fire({\r\n            icon: 'error',\r\n            title: 'Oops...',\r\n            text: error\r\n        });\r\n    }\r\n    const eventSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        const momentStartDate = moment(start);\r\n        const momentEndDate = moment(end);\r\n        if( momentStartDate.isSameOrAfter(momentEndDate) ){\r\n            return errorSwal('La fecha fin debe ser mayor a la inicial');\r\n        }\r\n        if( titleInvalid ){\r\n            return errorSwal('El titulo es obligatorio');\r\n        }\r\n        if( eventActive ){\r\n            dispatch( startEventUpdated(formValues) );\r\n        }else{\r\n            dispatch( eventStartAddNew( formValues ));\r\n        }\r\n        closeModal();\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            isOpen={modalOpen}\r\n            onRequestClose={closeModal}\r\n            style={customStyles}\r\n            contentLabel=\"Example Modal\"\r\n            overlayClassName=\"modal-fondo\"\r\n            closeTimeoutMS={200}\r\n            ariaHideApp={ process.env.NODE_ENV !==  'test' }\r\n        >\r\n            <h1>{ eventActive ? 'Editar Evento' : 'Nuevo Evento'}</h1>\r\n            <form\r\n                className=\"container\"\r\n                onSubmit={eventSubmit}\r\n            >\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        className=\"form-control\"\r\n                        onChange={handleStartDate}\r\n                        value={start}\r\n                        format=\"y-MM-dd HH:mm:ss a\"\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        className=\"form-control\"\r\n                        onChange={handleEndDate}\r\n                        value={end}\r\n                        format=\"y-MM-dd HH:mm:ss a\"\r\n                        minDate={start}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className={`form-control ${ titleValid ? 'is-valid' : 'is-invalid' }`}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        value={title}\r\n                        onChange={handleInputChange}\r\n                        autoComplete=\"off\"\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <textarea\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={notes}\r\n                        onChange={handleInputChange}\r\n                    >\r\n                    </textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n            </form>\r\n        </Modal>\r\n    )\r\n}\r\n","import { types } from \"../types/types\"\r\n\r\nexport const uiOpenModal = () => ({ type: types.uiOpenModal });\r\nexport const uiCloseModal = () => ({ type: types.uiCloseModal });","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './FabAddNew.css';\r\n\r\nexport default function FabAddNew({ className, handleClick, text}) {\r\n    return (\r\n        <button\r\n            className={`btn ${className}`}\r\n            onClick={handleClick}\r\n        >\r\n            {text}\r\n        </button>\r\n    )\r\n}\r\n\r\nFabAddNew.propTypes = {\r\n    text: PropTypes.element.isRequired,\r\n    handleClick: PropTypes.func.isRequired,\r\n    className: PropTypes.string.isRequired,\r\n}","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport default function Navbar() {\r\n\r\n    const { name } = useSelector( state => state.auth );\r\n    const dispatch = useDispatch();\r\n\r\n    const handleLogout = () => {\r\n        dispatch( startLogout() );\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <div className=\"container\">\r\n                <span className=\"navbar-brand\">\r\n                    { name }\r\n                </span>\r\n                <button\r\n                    className=\"btn btn-danger\"\r\n                    onClick={ handleLogout }\r\n                >\r\n                    <i className=\"fas fa-sign-out-alt\"></i>\r\n                    <span>\r\n                        Salir\r\n                    </span>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Calendar as BigCalendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport 'moment/locale/es-mx';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { messages } from '../../helpers/calendarMessages';\r\nimport CalendarEvent from './CalendarEvent';\r\nimport CalendarModal from './CalendarModal';\r\nimport './CalendarScreen.css';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventSetActive, eventStartDelete, eventClearActive, calendarDateSelected, eventStartLoaded } from '../../actions/events';\r\nimport FabAddNew from '../ui/FabAddNew';\r\nimport Navbar from '../ui/Navbar';\r\n\r\n// Setup the localizer by providing the moment (or globalize) Object\r\n// to the correct localizer.\r\nmoment.locale('es');\r\nconst localizer = momentLocalizer(moment)\r\n\r\nexport default function CalendarScreen() {\r\n    const { events, eventActive } = useSelector(state => state.calendar)\r\n    const { _id } = useSelector(state => state.auth)\r\n    const dispatch = useDispatch();\r\n\r\n    const [currentView, setCurrentView] = useState(localStorage.getItem('currentView') || 'week');\r\n\r\n    useEffect(() => {\r\n        dispatch( eventStartLoaded() );\r\n    }, [dispatch]);\r\n\r\n    const handleOpenModal = (e) => {\r\n        dispatch( uiOpenModal() );\r\n    }\r\n    const handleDeleteEvent = (e) => {\r\n        dispatch( eventStartDelete() );\r\n    }\r\n    const handleSelectSlot = ({start}) => {\r\n        dispatch( calendarDateSelected(start) );\r\n        eventActive && dispatch( eventClearActive() );\r\n    }\r\n    const onSelect = (e) => {\r\n        dispatch( eventSetActive(e) );\r\n    }\r\n    const onViewEvent = (e) => {\r\n        setCurrentView(e);\r\n        localStorage.setItem('currentView', e);\r\n    }\r\n    const eventStyle = ( event,start,end,isSelected ) => {\r\n        return {\r\n            className: `event-calendar ${ event.user._id === _id ? 'event-own' : 'event-not-own'}`\r\n        }\r\n    };\r\n    const components = {\r\n        event: CalendarEvent, // used by each view (Month, Day, Week)\r\n    }\r\n    return (\r\n        <div className=\"main-calendar\">\r\n            <Navbar/>\r\n            <BigCalendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={messages}\r\n                eventPropGetter={eventStyle}\r\n                onDoubleClickEvent={handleOpenModal}\r\n                onSelectEvent={onSelect}\r\n                onView={onViewEvent}\r\n                view={currentView}\r\n                components={components}\r\n                onSelectSlot={handleSelectSlot}\r\n                selectable={true}\r\n            />\r\n            <FabAddNew\r\n                className='btn-primary fab-add'\r\n                text={<i className=\"fas fa-plus\"></i>}\r\n                handleClick={handleOpenModal}\r\n            />\r\n            {\r\n                eventActive && \r\n                <FabAddNew\r\n                    className='btn-danger fab-delete'\r\n                    text={<i className=\"fas fa-trash\"></i>}\r\n                    handleClick={handleDeleteEvent}\r\n                />\r\n            }\r\n            <CalendarModal\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {\r\n    Route,\r\n    Redirect,\r\n} from \"react-router-dom\";\r\n\r\nexport default function PrivateRoute({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}){\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(routeProps) => \r\n                isAuthenticated ? (\r\n                    <Component {...routeProps}/>\r\n                ) : (\r\n                    <Redirect to={{\r\n                        pathname: `/login`,\r\n                        state: { from: routeProps.location }\r\n                    }} />\r\n                )\r\n            }\r\n        />\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {\r\n    Route,\r\n    Redirect,\r\n} from \"react-router-dom\";\r\n\r\nexport default function PublicRoute({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}){\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            component={( routeProps ) =>\r\n                isAuthenticated ? (\r\n                    <Redirect to={{\r\n                        pathname: `/`,\r\n                        state: { from: routeProps.location }\r\n                    }} />\r\n                ) : (\r\n                    <Component {...routeProps}/>\r\n                )\r\n            }\r\n        />\r\n    );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport {\r\n    Switch,\r\n    Redirect,\r\n    HashRouter\r\n} from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport LoginScreen from '../components/auth/LoginScreen';\r\nimport CalendarScreen from '../components/calendar/CalendarScreen';\r\nimport { startChecking } from '../actions/auth';\r\nimport PrivateRoute from './PrivateRoute';\r\nimport PublicRoute from './PublicRoute';\r\n\r\nexport default function AppRouter() {\r\n\r\n    const dispatch = useDispatch();\r\n    const { checking, _id } = useSelector( state => state.auth);\r\n    \r\n    const authenticated = !!_id;\r\n\r\n    useEffect(() => {\r\n        dispatch( startChecking() );\r\n    }, [dispatch])\r\n\r\n    if ( checking ) {\r\n        return ( <h3>Checking...</h3> )\r\n    }\r\n    return (\r\n        <HashRouter>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute exact path='/login' component={LoginScreen} isAuthenticated={authenticated} />\r\n                    <PrivateRoute exact path='/' component={CalendarScreen} isAuthenticated={authenticated} />\r\n                    <Redirect to='/'/>\r\n                </Switch>\r\n            </div>\r\n        </HashRouter>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            };\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    events:[],\r\n    eventActive: null,\r\n    calendarDateSelected: null\r\n};\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                calendarDateSelected: null,\r\n                eventActive: action.payload\r\n            }\r\n        case types.eventClearActive:\r\n            return {\r\n                ...state,\r\n                eventActive: null\r\n            }\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [\r\n                    ...state.events,\r\n                    action.payload\r\n                ]\r\n            }\r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map( e => (\r\n                    e.id === action.payload.id ? action.payload : e\r\n                ))\r\n            }\r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter( e => (\r\n                    e.id !== state.eventActive.id\r\n                )),\r\n                eventActive: null\r\n            }\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: [ ...action.payload ]\r\n            }\r\n        case types.calendarDateSelected:\r\n            return {\r\n                ...state,\r\n                calendarDateSelected: action.payload\r\n            }\r\n        case types.eventClear:\r\n            return {\r\n                ...state,\r\n                ...initialState\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    _id: '',\r\n    name: ''\r\n}\r\n\r\nexport const authReducer = ( state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false,\r\n            }\r\n        case types.authFinishCheking:\r\n            return {\r\n                ...state,\r\n                checking: false,\r\n            }\r\n        case types.authLogout:\r\n            return {\r\n                checking: false,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\n\r\nimport { uiReducer } from './uiReducer';\r\nimport { calendarReducer } from './calendarReducer';\r\nimport { authReducer } from './authReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n});","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { rootReducer } from '../reducers/rootReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n);","import React from 'react';\r\nimport AppRouter from './routers/AppRouter';\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport './App.css';\r\nimport { store } from './store';\r\n\r\nexport default function App() {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter/>\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}